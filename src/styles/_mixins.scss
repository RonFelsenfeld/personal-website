@use './spacing';
@use './colors';
@use './fonts';
@use './layout';

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin section {
  min-height: calc(100dvh - layout.$app-header-height);
}

@mixin main-layout {
  display: grid;
  grid-template-columns: layout.$main-layout-side-margins-width 1fr layout.$main-layout-side-margins-width;

  // The global selector is to allow the fullRow class to be used in the children of the MainLayout component which are not a direct children of the MainLayout component (used in page.tsx, e.g. the AppHeader component)
  > *:not(:global(.fullRow)) {
    grid-column: 2;
  }

  > :global(.fullRow) {
    grid-column: 1 / -1;
  }
}

@mixin cards-grid(
  $card-min-width: layout.$card-min-width,
  $gap: spacing.$spacing-2xl
) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($card-min-width, 1fr));
  gap: $gap;

  align-self: center;
}

@mixin tag-label($color: colors.$primary) {
  padding: spacing.$spacing-xs spacing.$spacing-sm;
  border: 1px solid rgba($color, 0.2);
  border-radius: layout.$border-radius-sm;

  font-size: fonts.$font-size-xs;
  font-weight: fonts.$font-weight-medium;
  color: $color;

  background: rgba($color, 0.1);
  transition: all 0.2s ease;

  &:hover {
    background: rgba($color, 0.15);
    border-color: rgba($color, 0.3);
  }
}
